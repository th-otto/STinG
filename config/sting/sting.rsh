/*
 * GEM resource C output of sting
 *
 * created by ORCS 2.16
 */

#ifndef _LONG_PTR
#  define _LONG_PTR LONG
#endif

#ifndef OS_NORMAL
#  define OS_NORMAL 0x0000
#endif
#ifndef OS_SELECTED
#  define OS_SELECTED 0x0001
#endif
#ifndef OS_CROSSED
#  define OS_CROSSED 0x0002
#endif
#ifndef OS_CHECKED
#  define OS_CHECKED 0x0004
#endif
#ifndef OS_DISABLED
#  define OS_DISABLED 0x0008
#endif
#ifndef OS_OUTLINED
#  define OS_OUTLINED 0x0010
#endif
#ifndef OS_SHADOWED
#  define OS_SHADOWED 0x0020
#endif
#ifndef OS_WHITEBAK
#  define OS_WHITEBAK 0x0040
#endif
#ifndef OS_DRAW3D
#  define OS_DRAW3D 0x0080
#endif

#ifndef OF_NONE
#  define OF_NONE 0x0000
#endif
#ifndef OF_SELECTABLE
#  define OF_SELECTABLE 0x0001
#endif
#ifndef OF_DEFAULT
#  define OF_DEFAULT 0x0002
#endif
#ifndef OF_EXIT
#  define OF_EXIT 0x0004
#endif
#ifndef OF_EDITABLE
#  define OF_EDITABLE 0x0008
#endif
#ifndef OF_RBUTTON
#  define OF_RBUTTON 0x0010
#endif
#ifndef OF_LASTOB
#  define OF_LASTOB 0x0020
#endif
#ifndef OF_TOUCHEXIT
#  define OF_TOUCHEXIT 0x0040
#endif
#ifndef OF_HIDETREE
#  define OF_HIDETREE 0x0080
#endif
#ifndef OF_INDIRECT
#  define OF_INDIRECT 0x0100
#endif
#ifndef OF_FL3DIND
#  define OF_FL3DIND 0x0200
#endif
#ifndef OF_FL3DBAK
#  define OF_FL3DBAK 0x0400
#endif
#ifndef OF_FL3DACT
#  define OF_FL3DACT 0x0600
#endif
#ifndef OF_MOVEABLE
#  define OF_MOVEABLE 0x0800
#endif
#ifndef OF_POPUP
#  define OF_POPUP 0x1000
#endif

#ifndef G_SWBUTTON
#  define G_SWBUTTON 34
#endif
#ifndef G_POPUP
#  define G_POPUP 35
#endif
#ifndef G_EDIT
#  define G_EDIT 37
#endif
#ifndef G_SHORTCUT
#  define G_SHORTCUT 38
#endif
#ifndef G_SLIST
#  define G_SLIST 39
#endif
#ifndef G_EXTBOX
#  define G_EXTBOX 40
#endif
#ifndef G_OBLINK
#  define G_OBLINK 41
#endif

#ifndef WHITEBAK
#  define WHITEBAK OS_WHITEBAK
#endif
#ifndef DRAW3D
#  define DRAW3D OS_DRAW3D
#endif
#ifndef FL3DIND
#  define FL3DIND OF_FL3DIND
#endif
#ifndef FL3DBAK
#  define FL3DBAK OF_FL3DBAK
#endif
#ifndef FL3DACT
#  define FL3DACT OF_FL3DACT
#endif

#ifndef C_UNION
#ifdef __PORTAES_H__
#  define C_UNION(x) { (_LONG_PTR)(x) }
#endif
#ifdef __GEMLIB__
#  define C_UNION(x) { (_LONG_PTR)(x) }
#endif
#ifdef __PUREC__
#  define C_UNION(x) { (_LONG_PTR)(x) }
#endif
#ifdef __ALCYON__
#  define C_UNION(x) x
#endif
#endif
#ifndef C_UNION
#  define C_UNION(x) (_LONG_PTR)(x)
#endif

#define T0OBJ 0
#define FREEBB 2
#define FREEIMG 2
#define FREESTR 20

BYTE *rs_strings[] = {
	(BYTE *)"Version 00.01",
	(BYTE *)"(c)  1997  by",
	(BYTE *)"",
	(BYTE *)"",
	(BYTE *)"Peter Rottengatter",
	(BYTE *)"",
	(BYTE *)"",
	(BYTE *)"View :",
	(BYTE *)"Protocols",
	(BYTE *)"Drivers",
	(BYTE *)"Memory",
	(BYTE *)"Delay :",
	(BYTE *)"",
	(BYTE *)"Active",
	(BYTE *)"888",
	(BYTE *)"",
	(BYTE *)"",
	(BYTE *)"Save",
	(BYTE *)"Ok",
	(BYTE *)"Cancel"
};

static WORD IMAG0[] = {
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
0xF, 0xF000, 0x0, 0x38, 0x0, 0x0, 0x1F, 0xE000, 
0x7F, 0xFE0F, 0xFFFF, 0xF87C, 0x0, 0x0, 0x1FF, 0xFC00, 
0xF0, 0x3E0F, 0xFFFF, 0xF87C, 0x0, 0x0, 0x7E0, 0x7C00, 
0x1E0, 0xE0E, 0x3C0, 0x787C, 0x0, 0x0, 0x1F00, 0x1C00, 
0x3C0, 0xE0E, 0x3C0, 0x7038, 0x0, 0x0, 0x3E00, 0x1C00, 
0x780, 0xC1C, 0x3C0, 0x7000, 0x0, 0x0, 0x7800, 0x1800, 
0x700, 0xC1C, 0x3C0, 0x7000, 0x0, 0x0, 0xF000, 0x1800, 
0xF00, 0xC1C, 0x780, 0x7000, 0x0, 0x1, 0xE000, 0x1800, 
0xF00, 0x0, 0x780, 0x0, 0x0, 0x3, 0xC000, 0x0, 
0xF00, 0x0, 0x780, 0xF0, 0x1C0, 0xF003, 0xC000, 0x0, 
0xF80, 0x0, 0x780, 0xFF0, 0xFC3, 0xF807, 0x8000, 0x0, 
0xF80, 0x0, 0x780, 0x1F0, 0x3FCF, 0xFC07, 0x8000, 0x0, 
0x7E0, 0x0, 0xF00, 0xE0, 0x39C, 0x7C0F, 0x0, 0x0, 
0x7F8, 0x0, 0xF00, 0xE0, 0x3F0, 0x3C0F, 0x0, 0x0, 
0x3FE, 0x0, 0xF00, 0xE0, 0x7E0, 0x3C0F, 0x0, 0x0, 
0xFF, 0x0, 0xF00, 0x1E0, 0x780, 0x3C1E, 0x0, 0x0, 
0x7F, 0xC000, 0xF00, 0x1E0, 0x780, 0x381E, 0x0, 0x0, 
0x1F, 0xE000, 0xF00, 0x1E0, 0x700, 0x381E, 0xF, 0xFE00, 
0x7, 0xF000, 0x1E00, 0x1C0, 0x700, 0x781E, 0xF, 0xFE00, 
0x1, 0xF800, 0x1E00, 0x1C0, 0xF00, 0x781E, 0x1, 0xF000, 
0x0, 0xF800, 0x1E00, 0x3C0, 0xF00, 0x781E, 0x1, 0xE000, 
0x0, 0x7800, 0x1E00, 0x3C0, 0xF00, 0x701E, 0x1, 0xE000, 
0x0, 0x7800, 0x1E00, 0x3C0, 0xF00, 0x700E, 0x1, 0xE000, 
0x3000, 0x7800, 0x3C00, 0x3C0, 0xE00, 0xF00F, 0x1, 0xE000, 
0x3000, 0x7000, 0x3C00, 0x380, 0x1E00, 0xF00F, 0x3, 0xE000, 
0x7000, 0x7000, 0x3C00, 0x380, 0x1E00, 0xF007, 0x8003, 0xC000, 
0x7000, 0xF000, 0x3C00, 0x780, 0x1E00, 0xE007, 0x8003, 0xC000, 
0x7001, 0xE000, 0x3C00, 0x780, 0x1E00, 0xE003, 0xC003, 0xC000, 
0xF003, 0xC000, 0x7800, 0x780, 0x1C01, 0xF003, 0xF003, 0xC000, 
0xFC0F, 0x8000, 0x7C00, 0x784, 0x3C01, 0xF000, 0xFC0F, 0xC000, 
0x7FFE, 0x3, 0xFF80, 0x7FC, 0x3C00, 0xFF00, 0x3FFF, 0x8000, 
0xFF0, 0x3, 0xFF80, 0x3E0, 0x3C00, 0x7C00, 0x7F8, 0x0, 
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};

static WORD IMAG1[] = {
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
0x0, 0x3F, 0xFF00, 0x0, 0x0, 0x0, 0x0, 0x3FE1, 
0x46FF, 0x8000, 0x0, 0x0, 0x1, 0xC1C0, 0x4000, 0x7800, 
0x0, 0x0, 0xE, 0xE2B, 0x5F3F, 0xEE00, 0x0, 0x0, 
0x3C, 0x1FEC, 0x7DFF, 0xC180, 0x0, 0x0, 0x1C1, 0x7EFF, 
0xEAFF, 0xCCF0, 0x0, 0x0, 0x700, 0xF5FF, 0xD555, 0x605C, 
0x0, 0x0, 0x1C01, 0xEAF8, 0xFEAA, 0xFCFE, 0x0, 0x0, 
0x7007, 0x5570, 0xEFD5, 0x57FF, 0x0, 0x0, 0xC07E, 0xAEE0, 
0xEA, 0xABFB, 0x0, 0x3, 0x7F5, 0x5F00, 0x403D, 0x55D5, 
0x0, 0x6, 0x1F6A, 0xF800, 0x1A, 0xAAEA, 0x0, 0x8, 
0x75D5, 0xC080, 0x406F, 0x5555, 0x0, 0x31, 0xEAAA, 0xC000, 
0x7D, 0xEAAA, 0x0, 0x67, 0x575D, 0x8020, 0x4098, 0xD555, 
0x0, 0xFE, 0xFDFB, 0xC008, 0x0, 0xEAAE, 0x0, 0x1FD, 
0x5777, 0xA800, 0x4200, 0xD555, 0x0, 0x3AA, 0xAEBE, 0xFE02, 
0x4005, 0x6AAA, 0x0, 0xFD5, 0x575D, 0xFC80, 0x851, 0xF555, 
0x0, 0x1EAA, 0xBEB9, 0xFC31, 0x4103, 0xBAAA, 0x0, 0x1D55, 
0x757F, 0x7E04, 0x1407, 0xD555, 0x0, 0x3AAA, 0xAADF, 0xFF01, 
0x781E, 0xAAAA, 0x0, 0x7557, 0xF57F, 0xFFD5, 0x755D, 0xD555, 
0x0, 0xEAAA, 0xEABF, 0xFD64, 0xD400, 0x7AAA, 0x1, 0xD555, 
0x557F, 0xFFF0, 0x100, 0x1555, 0x3, 0xAABA, 0xFFFB, 0xCFFA, 
0x4860, 0x1EAA, 0x3, 0x5575, 0x97BB, 0x1F7E, 0x4873, 0xF55, 
0x6, 0xAAEA, 0xCFFB, 0x1AAE, 0xC5, 0x3EAA, 0xD, 0x5556, 
0x5E72, 0x1557, 0x4203, 0x3F55, 0x1A, 0xAAAE, 0x5F76, 0x3AAB, 
0xE01, 0x89AA, 0x1D, 0x5574, 0x1BEC, 0xB556, 0x5F01, 0xC7D5, 
0x3A, 0xAAEC, 0x3A19, 0x6AAC, 0xF80, 0xD7EA, 0x7D, 0x5754, 
0xEE78, 0xD55C, 0x4E00, 0xFD55, 0x6A, 0xAFBE, 0xAFD5, 0xEAA8, 
0x440, 0x76AA, 0x55, 0x5F7D, 0x5FF1, 0xD558, 0x4000, 0xD55, 
0xBA, 0xAEBE, 0xBFA3, 0xAAB8, 0x20, 0x3AAA, 0x1D5, 0x7F75, 
0x780D, 0x5570, 0x4010, 0x3D55, 0x1AA, 0xFEAA, 0xB88A, 0xAAE0, 
0x38, 0x7AAA, 0x355, 0x7D55, 0x5A1D, 0x57E0, 0x407F, 0xF555, 
0x2EA, 0xBEAA, 0xB41A, 0xADC0, 0x40E8, 0x3AAA, 0x3DD, 0x7D55, 
0x5215, 0xDF00, 0x1DF, 0xF555, 0x56A, 0xBAAA, 0xB12B, 0xE000, 
0x41AD, 0xFAAA, 0x675, 0x7D55, 0x6037, 0x800, 0x357, 0xF555, 
0x66A, 0xAAFA, 0xE07C, 0x13F0, 0x41BF, 0x2AAA, 0xCF5, 0x557D, 
0x6018, 0x330, 0x4159, 0xB555, 0xC2A, 0xEABF, 0xC002, 0x23F0, 
0x2B8, 0xFAAA, 0xE35, 0xFF6F, 0x4000, 0x80, 0x4768, 0xFD55, 
0x1E3B, 0xD9E7, 0x8001, 0x4000, 0xEA9, 0xEAAA, 0x1C7F, 0x9FF, 
0x0, 0x2006, 0x4D6F, 0xD555, 0x1C63, 0x1F9, 0x0, 0x8D80, 
0xABF, 0xAAAA, 0x1CE0, 0x25, 0x0, 0x36, 0x4FD3, 0x7555, 
0x1CD0, 0x27, 0x1, 0x0, 0xEBB3, 0xAAAA, 0x3ED0, 0x7, 
0x0, 0x7, 0xFDB, 0x5555, 0x3BC0, 0x80, 0x2, 0x7, 
0xC5BA, 0xAAAA, 0x3B48, 0x100, 0x2, 0x6, 0x83F3, 0x5555, 
0x3BC0, 0x0, 0x0, 0x7, 0xC3EF, 0xAAAA, 0x3B84, 0x200, 
0x4, 0xF, 0x83FD, 0xD555, 0x3B00, 0x0, 0x0, 0x1F, 
0xC3EA, 0xAAAA, 0x7B02, 0x800, 0x8, 0x37, 0x4755, 0x555D, 
0x5B00, 0x800, 0x0, 0x3E, 0x7EAA, 0xABBA, 0x7700, 0x0, 
0x0, 0x3B, 0x2D55, 0x5D6D, 0x7781, 0x1000, 0x10, 0x3, 
0xFAAA, 0xFFFF, 0x7380, 0x0, 0x0, 0x7, 0xF555, 0x77F0, 
0x7380, 0x6000, 0x20, 0x3, 0xEAAA, 0xABA0, 0x7180, 0x0, 
0x0, 0x3, 0x5555, 0x558F, 0x5180, 0x9000, 0x20, 0x1, 
0xAABA, 0xABBA, 0x5080, 0x0, 0x40, 0x0, 0xD57D, 0x55F5, 
0x7081, 0xC00, 0x0, 0x0, 0xAAB6, 0xAAEA, 0x5C42, 0x0, 
0x80, 0x10, 0xD5DB, 0xD7D5, 0x7C40, 0x100, 0x0, 0x3F, 
0xAEEE, 0x6FAB, 0x5604, 0x0, 0x80, 0x35, 0x58FB, 0xDDF7};

LONG rs_frstr[] = {
	0
};

BITBLK rs_bitblk[] = {
	{ (WORD *)0L, 16, 36, 0, 0, 1 },
	{ (WORD *)1L, 12, 72, 0, 0, 1 }
};

LONG rs_frimg[] = {
	0
};

ICONBLK rs_iconblk[] = {
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
};

TEDINFO rs_tedinfo[] = {
	{ (BYTE *)1L, (BYTE *)2L, (BYTE *)3L, 5, 6, 0, 0x1180, 0x0, -1, 14,1 },
	{ (BYTE *)4L, (BYTE *)5L, (BYTE *)6L, 5, 6, 0, 0x1180, 0x0, -1, 19,1 },
	{ (BYTE *)14L, (BYTE *)15L, (BYTE *)16L, 3, 6, 2, 0x1180, 0x0, -1, 4,1 }
};

OBJECT rs_object[] = {
	{ -1, 1, 24, G_BOX, OF_NONE, OS_NORMAL, C_UNION(0x1101L), 0x0000,0x0000, 0x0020,0x000b },
	{ 22, 2, 20, G_BOX, OF_NONE, OS_NORMAL, C_UNION(0xFF1100L), 0x0000,0x0000, 0x0020,0x0309 },
	{ 6, 3, 5, G_BOX, OF_NONE, OS_NORMAL, C_UNION(0x1100L), 0x0211,0x0000, 0x000e,0x0d02 },
	{ 4, -1, -1, G_STRING, OF_NONE, OS_NORMAL, C_UNION(0x0L), 0x0400,0x0600, 0x000d,0x0001 },
	{ 5, -1, -1, G_TEXT, OF_NONE, OS_NORMAL, C_UNION(0x0L), 0x0002,0x0601, 0x000a,0x0d00 },
	{ 2, -1, -1, G_TEXT, OF_NONE, OS_NORMAL, C_UNION(0x1L), 0x0200,0x0f01, 0x050d,0x0d00 },
	{ 7, -1, -1, G_IMAGE, OF_NONE, OS_NORMAL, C_UNION(0x0L), 0x0401,0x0600, 0x0010,0x0402 },
	{ 12, 8, 11, G_BOX, OF_NONE, OS_NORMAL, C_UNION(0x1100L), 0x0400,0x0f02, 0x020d,0x0006 },
	{ 9, -1, -1, G_STRING, OF_NONE, OS_NORMAL, C_UNION(0x7L), 0x0001,0x0200, 0x0006,0x0001 },
	{ 10, -1, -1, G_BUTTON, 0x41, OS_SHADOWED, C_UNION(0x8L), 0x0001,0x0801, 0x000b,0x0001 },
	{ 11, -1, -1, G_BUTTON, 0x41, OS_SHADOWED, C_UNION(0x9L), 0x0001,0x0003, 0x000b,0x0001 },
	{ 7, -1, -1, G_BUTTON, 0x41, OS_SHADOWED, C_UNION(0xAL), 0x0001,0x0804, 0x000b,0x0001 },
	{ 13, -1, -1, G_STRING, OF_NONE, OS_NORMAL, C_UNION(0xBL), 0x010c,0x0103, 0x0007,0x0001 },
	{ 16, 14, 15, G_IBOX, OF_NONE, OS_NORMAL, C_UNION(0x1100L), 0x0715,0x0103, 0x0009,0x0001 },
	{ 15, -1, -1, (0x1<<8)+G_BUTTON, OF_SELECTABLE, 0x6, C_UNION(0xCL), 0x0000,0x0000, 0x0002,0x0001 },
	{ 13, -1, -1, G_STRING, OF_NONE, OS_NORMAL, C_UNION(0xDL), 0x0003,0x0000, 0x0006,0x0001 },
	{ 19, 17, 18, G_BOX, OF_NONE, OS_NORMAL, C_UNION(0x1100L), 0x020f,0x0704, 0x0602,0x0203 },
	{ 18, -1, -1, G_BOX, OF_NONE, OS_NORMAL, C_UNION(0xFF1100L), 0x0101,0x0000, 0x0300,0x0203 },
	{ 16, -1, -1, G_BOX, OF_TOUCHEXIT, OS_NORMAL, C_UNION(0x11161L), 0x0000,0x0101, 0x0602,0x0800 },
	{ 20, -1, -1, G_IMAGE, OF_NONE, OS_NORMAL, C_UNION(0x1L), 0x0014,0x0b04, 0x000c,0x0804 },
	{ 1, 21, 21, G_BOX, OF_NONE, OS_NORMAL, C_UNION(0x1100L), 0x010f,0x0d07, 0x0003,0x0001 },
	{ 20, -1, -1, G_TEXT, OF_NONE, OS_NORMAL, C_UNION(0x2L), 0x0000,0x0000, 0x0003,0x0001 },
	{ 24, 23, 23, G_BOX, OF_NONE, OS_NORMAL, C_UNION(0xFF1100L), 0x0000,0x0409, 0x070b,0x0c01 },
	{ 22, -1, -1, G_BUTTON, 0x5, OS_NORMAL, C_UNION(0x11L), 0x0701,0x0600, 0x0008,0x0001 },
	{ 0, 25, 26, G_BOX, OF_NONE, OS_NORMAL, C_UNION(0xFF1100L), 0x000c,0x0409, 0x0014,0x0c01 },
	{ 26, -1, -1, G_BUTTON, 0x7, OS_NORMAL, C_UNION(0x12L), 0x0202,0x0600, 0x0005,0x0001 },
	{ 24, -1, -1, G_BUTTON, 0x25, OS_NORMAL, C_UNION(0x13L), 0x0009,0x0600, 0x0009,0x0001 }
};

_LONG_PTR rs_trindex[] = {
	0L
};

#ifndef __foobar_defined
#define __foobar_defined 1
struct foobar {
	WORD 	dummy;
	WORD 	*image;
};
#endif
struct foobar rs_imdope[] = {
	{ 0, &IMAG0[0] },
	{ 0, &IMAG1[0] }
};



#define NUM_STRINGS 20
#define NUM_FRSTR 0
#define NUM_UD 0
#define NUM_IMAGES 2
#define NUM_BB 2
#define NUM_FRIMG 0
#define NUM_IB 0
#define NUM_CIB 0
#define NUM_TI 3
#define NUM_OBS 27
#define NUM_TREE 1

BYTE pname[] = "STING.RSC";
