@node "The TCP/IP Philosophy"
@prev "The TCP/IP Philosophy"
The TCP/IP Philosophy                                              STinG
@line 1 72 0 0 7

 @{"IP Next Generation" LINK "IP Next Generation"}

@endnode


@node "Internet Protocol (IP)"
Internet Protocol (IP)                                             STinG
@line 1 72 0 0 7


          0         1         2         3
          01234567890123456789012345678901
@box 11  4 1 0
@box 15  4 1 0
@box 19  8 1 0
@box 27 16 1 0
          Vers Len   TOS    Total Length
@box 11 16 1 0
@box 27  3 1 0
@box 30 13 1 0
           Identification Flg Frag. Offs.
@box 11  8 1 0
@box 19  8 1 0
@box 27 16 1 0
             TTL  Protocol Header Checksum
@box 11 32 1 0
                  Source IP Address
@box 11 32 1 0
               Destination IP Address
@box 11 32 1 0
               Options     ..|.. Padding
@box 11 32 3 0
                     Data Bytes
              (higher protocol header)


Description of the entries :

   Vers
          The IP version number this datagram complies with. The current
          IP version is 4. 5 is experimental, and 6 is @{"IPng" LINK "IP Next Generation"}
   Len
          The length of the IP header counted in 32 bit quantities. This
          does include the options, but not the data field.
   TOS
          IP datagram @{"Type Of Service" LINK "IP Type Of Service"}
   Total Length
          The total length of the datagram, including header, options and
          data, specified in bytes.
   Identification
          A unique number assigned by the sender to aid in reassembling a
          fragmented datagram. Fragments of a datagram will all have the
          same Identification number.
   Flg
          Three flags. The left-most ist reserved and must be zero. The
          next one being set to one means routers must not fragment this
          datagram. The last flag being one indicates that there are more
          fragments to follow in order to complete the datagram.
   Frag. Offs.
          Used in fragmented datagrams to facilitate reassembly. Fragment
          Offset is the number of 64 bit units (not counting header bytes)
          that are contained in earlier datagrams.
   TTL
          Specifies the time in seconds this datagram is allowed to travel.
          Each router is supposed to subtract at least one, and since they
          usually process a datagram in far less than a second, this value
          rather becomes a hop-count metric.  When the value reaches zero,
          it is assumed that this datagram has been travelling in a closed
          loop and it is discarded.
   Protocol
          Indicates the higher-level protocol to which the receiving IP im-
          plementation should deliver the datagram. Important values are
          1 (ICMP), 6 (TCP), 17 (UDP).
   Header Checksum
          Is a checksum of the header including options only.  It does not
          include the data. Each router must check the checksum and discard
          the datagram if the checksum does not match.
   Source IP Address
   Destination IP Address
          The 32 bit IP addresses of the sending and the destination host
          for this datagram.
   Options
          Can be many options of variable length. The total options length
          in bytes is padded to a multiple of 4, i.e. a 32 bit boundary.




@endnode


@node "IP Type Of Service"
IP Type Of Service                                                 STinG
@line 1 72 0 0 7

The IP type of service parameter is an 8 bit number, the bits of which
have specific meanings referring to precedence and what characteristics
are desired for the datagram involved :

          Bits  7 ... 5    Precedence
          Bits  4 ... 1    TOS
          Bit         0    must be zero

     TOS :
          0000             Normal Service
          0001             Minimize monetary cost
          0010             Maximize reliability
          0100             Maximize throughput
          1000             Minimize delay

     Precedence :
          000              Routine
          001              Priority
          010              Immediate
          011              Flash
          100              Flash override
          101              Critical
          110              Internetwork control
          111              Network control

@endnode


@node "Internet Control Message Protocol (ICMP)"
Internet Control Message Protocol (ICMP)                           STinG
@line 1 72 0 0 7


          0         1         2         3
          01234567890123456789012345678901
@box 11  8 1 0
@box 19  8 1 0
@box 27 16 1 0
            Type    Code      Checksum
@box 11 32 3 0
                     ICMP  Data
                 (depending on Type)




@endnode


@node "Transmission Control Protocol (TCP)"
Transmission Control Protocol (TCP)                                STinG
@line 1 72 0 0 7


          0         1         2         3
          01234567890123456789012345678901
@box 11 16 1 0
@box 27 16 1 0
            Source Port      Dest. Port
@box 11 32 1 0
                  Sequence Number
@box 11 32 1 0
               Acknowledgment Number
@box 11  4 3 0
@box 15  6 3 0
@box 21  1 3 0
@box 22  1 3 0
@box 23  1 3 0
@box 24  1 3 0
@box 25  1 3 0
@box 26  1 3 0
@box 27 16 3 0
                    UAPRSF
          Offs Res. RCSSYI     Window
                    GKHTNN
@box 11 16 1 0
@box 27 16 1 0
              Checksum     Urgent Pointer
@box 11 32 1 0
               Options     ..|.. Padding
@box 11 32 3 0
                     Data Bytes



@endnode


@node "User Datagram Protocol (UDP)"
User Datagram Protocol (UDP)                                       STinG
@line 1 72 0 0 7


          0         1         2         3
          01234567890123456789012345678901
@box 11 16 1 0
@box 27 16 1 0
            Source Port      Dest. Port
@box 11 16 1 0
@box 27 16 1 0
               Length         Checksum
@box 11 32 3 0
                     Data Bytes



@endnode


@node "IP Next Generation"
IP Next Generation                                                 STinG
@line 1 72 0 0 7


The current version of the IP protocol has a number of shortcomings, most
seriously probably the problem of the limited address space of only four
billion IP addresses. This seems to be enough, but the net has grown ra-
pidly in recent years, and by December 1994 it comprised over 32000 net-
works connecting over 3.8 million hosts in more than 90 countries. Still
this number seems to be small compared to the 4 billion mentioned above,
but the current concept of dividing the address space into class A, B and
C networks of different, but fixed size wastes an awful lot of numbers.

At the time of September 1981, when the most recent specification of IPv4
originated, it was unthinkable that once there will be such a vast number
of machines needing an IP address. Bill Gates's ideas of coffee machines
running Windows and being hooked up to the Net will make this number ex-
plode once again. While it's fun to think about where you could plug the
computer mouse into the coffee machine, some serious computer scientists
have come up with some decent specifications on how IPng (IP Next Genera-
tion), or IPv6, should look like. However, up to now there is virtually
no host running IPv6. As soon as there is any significant number, STinG
will be adapted to fully explore the additional features of IPv6.

If anyone is interested in IPv6, some proposed details are summed up in
RFC #1550. This document can be fetched via the following URL :

          ftp://ftp.internic.net/rfc/rfc1550.txt

@endnode
